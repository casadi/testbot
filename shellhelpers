function allowfail() {
        ERR=$?
        for var in "$@"
        do
        if [ $ERR -eq $var ]
        then
                $(exit 0);
                return;
        fi
        done
        $(exit $ERR);
}

function assertfail() {
        ERR=$?
        if [ $ERR -eq "0" ]
        then
                $(exit 1);
                return;
        fi
        $(exit 0);
}

function mingw_setup() {
sudo apt-get update -qq
sudo apt-get remove -qq -y mingw32
cat <<EOF | sudo tee --append  /etc/apt/sources.list
    deb-src http://archive.ubuntu.com/ubuntu vivid main restricted universe multiverse
    deb http://archive.ubuntu.com/ubuntu vivid main restricted universe multiverse
EOF
cat <<EOF | sudo tee /etc/apt/preferences.d/mytest
    Package: *
    Pin: release n=trusty
    Pin-priority: 700

    Package: *
    Pin: release n=vivid
    Pin-priority: 600
EOF
sudo apt-get update -qq
sudo apt-get install -q -y -t vivid mingw-w64 
sudo apt-get install -q -y -t vivid mingw-w64 g++-mingw-w64 gcc-mingw-w64 gfortran-mingw-w64 mingw-w64-tools
}

function osx_rpath() {
      export FORTRAN_FULL=/usr/local/lib/gcc/4.9/libgfortran.3.dylib
      export QUADMATH_FULL=/usr/local/lib/gcc/4.9/libquadmath.0.dylib
      export GCC_FULL=/usr/local/lib/gcc/4.9/libgcc_s.1.dylib
      export GOMP_FULL=/usr/local/lib/gcc/4.9/libgomp.1.dylib
      
      sudo install_name_tool -id "@rpath/libgfortran.3.dylib" $FORTRAN_FULL
      sudo install_name_tool -id "@rpath/libquadmath.0.dylib" $QUADMATH_FULL
      sudo install_name_tool -id "@rpath/libgcc_s.1.dylib" $GCC_FULL
      sudo install_name_tool -id "@rpath/libgomp.1.dylib" $GOMP_FULL
      
      sudo install_name_tool -change $QUADMATH_FULL "@rpath/libquadmath.0.dylib" $FORTRAN_FULL
      sudo install_name_tool -change /usr/local/Cellar/gcc@4.9/4.9.4/lib/gcc/4.9/libquadmath.0.dylib "@rpath/libquadmath.0.dylib" $FORTRAN_FULL
      sudo install_name_tool -change $GCC_FULL "@rpath/libgcc_s.1.dylib" $FORTRAN_FULL 
      sudo install_name_tool -change $GCC_FULL "@rpath/libgcc_s.1.dylib" $QUADMATH_FULL
}

function osx_rpath_restore() {
      sudo install_name_tool -id "$FORTRAN_FULL" $FORTRAN_FULL
      sudo install_name_tool -id "$QUADMATH_FULL" $QUADMATH_FULL
      sudo install_name_tool -id "$GCC_FULL" $GCC_FULL
      sudo install_name_tool -id "$GOMP_FULL" $GOMP_FULL
      
      sudo install_name_tool -change "@rpath/libgcc_s.1.dylib" $GCC_FULL $QUADMATH_FULL
      sudo install_name_tool -change "@rpath/libgcc_s.1.dylib" $GCC_FULL $FORTRAN_FULL
      sudo install_name_tool -change "@rpath/libquadmath.0.dylib" $QUADMATH_FULL $FORTRAN_FULL
}

function python_setup() {
  if [[ $TRAVIS_OS_NAME == *linux* ]]
  then
    wget http://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh -O miniconda.sh
  else
    wget http://repo.continuum.io/miniconda/Miniconda2-latest-MacOSX-x86_64.sh -O miniconda.sh
  fi
  chmod +x miniconda.sh
  ./miniconda.sh -b
  export PATH=$HOME/miniconda2/bin:$PATH
  conda update --yes conda
  conda create --yes -n condaenv python=$TRAVIS_PYTHON_VERSION requests pyyaml numpy=$NUMPYVERSION scipy matplotlib
  conda install --yes -n condaenv pip
  source activate condaenv
  export PYTHONVERSION_DOT3=`python -c "import sys;print('%s.%s.%s' % sys.version_info[:3])"`
  echo ":$PYTHONVERSION_DOT3:"
  export PYTHONVERSION_DOT2=`python -c "import sys;print('%s.%s' % sys.version_info[:2])"`
  echo ":$PYTHONVERSION_DOT2:"
  export PYTHONVERSION=`python -c "import sys;print('%s%s' % sys.version_info[:2])"`
  echo ":$PYTHONVERSION:"
  export PYTHONVERSION1=`python -c "import sys;print(sys.version_info[0])"`
  echo ":$PYTHONVERSION1:"
  if [[ $PYTHONVERSION1 == 3 ]]
  then
    export WITH_PYTHON3=ON
    export PYTHONLIB_MOD=m
  else
    export PYTHONLIB_MOD=
  fi
  pip install pysftp
  export CMAKE_PYTHON_LIBRARY=$HOME/miniconda2/envs/condaenv/lib/libpython${PYTHONVERSION_DOT2}${PYTHONLIB_MOD}
  if [[ $TRAVIS_OS_NAME == *linux* ]]
  then
    export CMAKE_PYTHON_LIBRARY=${CMAKE_PYTHON_LIBRARY}.so
  else
    export CMAKE_PYTHON_LIBRARY=${CMAKE_PYTHON_LIBRARY}.dylib
  fi
  export CMAKE_PYTHON_INCLUDE_DIR=$HOME/miniconda2/envs/condaenv/include/python${PYTHONVERSION_DOT2}${PYTHONLIB_MOD}
}

function pinning() {
cat <<EOF | sudo tee --append  /etc/apt/sources.list
    deb-src http://archive.ubuntu.com/ubuntu $1 main restricted universe multiverse
    deb http://archive.ubuntu.com/ubuntu $1 main restricted universe multiverse
EOF
cat <<EOF | sudo tee /etc/apt/preferences.d/mytest
    Package: *
    Pin: release n=trusty
    Pin-priority: 700

    Package: *
    Pin: release n=$1
    Pin-priority: 600
EOF
sudo apt-get update -qq
}

function remote_access() {
  (while true ; do sleep 60 ; echo "ping" ; done ) &
  source $TESTBOT_DIR/restricted/env.sh
  ssh-keyscan $GATE_SERVER >> ~/.ssh/known_hosts
  whoami
  echo -e "ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEA3mEl1i8wiojyJdJnwrmC3RTWCIGgUM4lmtWNWu4p4QyiBry2iB7y2qno48pZqkV/EFRsyWWeEDvbdA4etYlceKZaGJFAdqJig/247qPbamU5W5++d7zkGwA5nQDH147/+JMYk4na9RoGl2iOHMyxi7Wq0WkN11u0Slp2awluvV9UXpBl/XD74eYmUfOFop6y+Hkg/K2hyytg8vAkp33x/vy8JxSK93vbnLGsrVOVjp6Epf7Jo2C8ZHX9eVL2sfi7icjNbt6s9AnU076tBURBIEQbg+Sa8nK7v6zzJNZbn9G85t0M64BKMvcRH1BXf0VvIeBQs/yv9uZLaC9SFvj+4Q== u0052373@xen-vm03.mech.kuleuven.be\nssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAstWCLcfH7d4G+Gaab0tJkXZTQ1dgbuCatG9yo75M63orK9K0g6hWimrbeugH0d/Lo8SQ+bXjALo0EqraTWWIlc2rLtdjbqSQL0FNwqfinT7aJ0m+8nBwAajUsumQW18AvLIYLDNL5aR5AfGk9CIkx/4D3+6csyt7gm2YTHwn/c7tFYyJS53Mfq5/9BHU+cBG6GGPff/SkVLj1BgEUXmDRk1JgoxolwCGGEAPYtc87kTcdz26cy/PydSjZ5VYliUtVYyzMMt9qnD4dKoaJe5VDSxQL2hulF6J2ZMbQw6SaMRYBtvgk8wtW3v0gTUXyd+w/o/nKy7krE+cy4lDtkMzTQ== u0052373@xen-vm03.mech.kuleuven.be" >> ~/.ssh/authorized_keys
  env > $HOME/env.txt
  ssh -i $TESTBOT_DIR/id_rsa_travis $USER_GATE@$GATE_SERVER -R 19922:localhost:22 -N
  # ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no travis@localhost -p 19922

}

function test_commit() {
  if [ $TESTCOMMIT ]; then
  pushd $HOME/build/casadi/binaries
  git remote add github git@github.com:casadi/binaries.git
  git fetch github
  git checkout $1
  git commit -a -m "automatic test commit $COMMIT" || allowfail 1
  test $(git status --porcelain | grep UU | wc -c) -eq 0
  git push github $1
  popd
  fi
}

